import { Markup } from 'telegraf';
import { BUTTONS } from '../constants/buttons.const';

export function actionButtonsStart(language: string = 'ua') {
  return Markup.keyboard(
    [
      Markup.button.callback(BUTTONS[language].BALANCE, '–ë–∞–ª–∞–Ω—Å'),
      Markup.button.callback(BUTTONS[language].TRANSACTIONS, '–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó'),
      Markup.button.callback(BUTTONS[language].STATISTICS, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'),
      Markup.button.callback(BUTTONS[language].FAMILY, '–†–æ–¥–∏–Ω–∞'),
    ],
    {
      columns: 2,
    },
  ).resize();
}

export function languageSet() {
  return Markup.inlineKeyboard(
    [Markup.button.callback('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞üá∫üá¶', 'setLanguage:ua'), Markup.button.callback('Englishüá¨üáß', 'setLanguage:en')],
    {
      columns: 2,
    },
  );
}

export function currencySet() {
  return Markup.inlineKeyboard(
    [Markup.button.callback('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞üá∫üá¶ –≥—Ä–∏–≤–Ω—è', 'UAH'), Markup.button.callback('United States DollarÔπ©', 'USD')],
    {
      columns: 1,
    },
  );
}
export function resetButton(language: string = 'ua') {
  return Markup.inlineKeyboard(
    [Markup.button.callback(BUTTONS[language].YES, 'yes'), Markup.button.callback(BUTTONS[language].NO, 'no')],
    {
      columns: 2,
    },
  );
}

export function actionButtonsTransaction(language: string = 'ua') {
  return Markup.inlineKeyboard(
    [
      Markup.button.callback(BUTTONS[language].INCOME, '–ü—Ä–∏—Ö–æ–¥'),
      Markup.button.callback(BUTTONS[language].EXPENSE, '–†–∞—Å—Ö–æ–¥'),
      Markup.button.callback(BUTTONS[language].DELETE_LAST, '–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—ÖÔ∏è'),
    ],
    { columns: 2 },
  );
}

export function actionButtonsStatistics(language: string = 'ua') {
  return Markup.inlineKeyboard(
    [
      Markup.button.callback(BUTTONS[language].TODAY, '–ó–∞ —Å–µ–≥–æ–¥–Ω—è'),
      Markup.button.callback(BUTTONS[language].WEEK, '–ó–∞ –Ω–µ–¥–µ–ª—é'),
      Markup.button.callback(BUTTONS[language].MONTH, '–ó–∞ –º–µ—Å—è—Ü'),
      Markup.button.callback(BUTTONS[language].SELECT_MONTH, '–í—ã–±—Ä–∞—Ç—å –º–µ—Å—è—Ü'),
      Markup.button.callback(BUTTONS[language].MY_INCOME, '–ú–æ–∏ –ø—Ä–∏—Ö–æ–¥—ã'),
      Markup.button.callback(BUTTONS[language].MY_EXPENSE, '–ú–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã'),
      Markup.button.callback(BUTTONS[language].BY_CATEGORY, '–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'),
    ],
    { columns: 2 },
  );
}

export function actionButtonsTransactionNames(transactionNames: string[]) {
  const buttons = [];
  for (const name of transactionNames) {
    buttons.push(Markup.button.callback(name, `TransactionName:${name}`));
  }
  return Markup.inlineKeyboard(buttons, { columns: 2 });
}

export function actionButtonsMonths(language: string = 'ua') {
  const buttons = [
    Markup.button.callback(BUTTONS[language].JANUARY, 'Month:1'),
    Markup.button.callback(BUTTONS[language].FEBRUARY, 'Month:2'),
    Markup.button.callback(BUTTONS[language].MARCH, 'Month:3'),
    Markup.button.callback(BUTTONS[language].APRIL, 'Month:4'),
    Markup.button.callback(BUTTONS[language].MAY, 'Month:5'),
    Markup.button.callback(BUTTONS[language].JUNE, 'Month:6'),
    Markup.button.callback(BUTTONS[language].JULY, 'Month:7'),
    Markup.button.callback(BUTTONS[language].AUGUST, 'Month:8'),
    Markup.button.callback(BUTTONS[language].SEPTEMBER, 'Month:9'),
    Markup.button.callback(BUTTONS[language].OCTOBER, 'Month:10'),
    Markup.button.callback(BUTTONS[language].NOVEMBER, 'Month:11'),
    Markup.button.callback(BUTTONS[language].DECEMBER, 'Month:12'),
  ];
  return Markup.inlineKeyboard(buttons, { columns: 3 });
}
